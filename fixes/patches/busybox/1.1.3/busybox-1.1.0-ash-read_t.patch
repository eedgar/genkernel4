De-bastardize the ash busybox "read -t" so that we time out only if a user
has pressed no key at all (if the user has pressed a key then let the user
finish). Behaviour also checked to work correctly with the -n and -s flags.

Tim Yamin <plasmaroo@gentoo.org> 14/04/06

--- busybox-1.1.0/shell/ash.c	2006-01-11 05:44:00.000000000 +0000
+++ busybox-1.1.0-plasmaroo/shell/ash.c	2006-04-14 03:14:07.000000000 +0100
@@ -12613,11 +12613,13 @@
 	int startword;
 	int status;
 	int i;
+#if defined(CONFIG_ASH_READ_NCHARS) || defined(CONFIG_ASH_READ_TIMEOUT)
+	struct termios tty, old_tty;
+#endif
 #if defined(CONFIG_ASH_READ_NCHARS)
 	int nch_flag = 0;
 	int nchars = 0;
 	int silent = 0;
-	struct termios tty, old_tty;
 #endif
 #if defined(CONFIG_ASH_READ_TIMEOUT)
 	fd_set set;
@@ -12692,44 +12694,73 @@
 		error("arg count");
 	if ((ifs = bltinlookup("IFS")) == NULL)
 		ifs = defifs;
-#if defined(CONFIG_ASH_READ_NCHARS)
+#if defined(CONFIG_ASH_READ_NCHARS) || defined(CONFIG_ASH_READ_TIMEOUT)
+#if defined(CONFIG_ASH_READ_NCHARS) && defined(CONFIG_ASH_READ_TIMEOUT)
+	if (nch_flag || silent || ts.tv_sec || ts.tv_usec) {
+#elif defined(CONFIG_ASH_READ_TIMEOUT)
+	if (ts.tv_sec || ts.tv_usec) {
+#elif defined(CONFIG_ASH_READ_NCHARS)
 	if (nch_flag || silent) {
+#endif
 		tcgetattr(0, &tty);
 		old_tty = tty;
-		if (nch_flag) {
+#if defined(CONFIG_ASH_READ_NCHARS) && defined(CONFIG_ASH_READ_TIMEOUT)
+		if (nch_flag || ts.tv_sec || ts.tv_usec)
+#elif defined(CONFIG_ASH_READ_TIMEOUT)
+		if (ts.tv_sec || ts.tv_usec)
+#elif defined(CONFIG_ASH_READ_NCHARS)
+		if (nch_flag)
+#endif
 		    tty.c_lflag &= ~ICANON;
-		    tty.c_cc[VMIN] = nchars;
-		}
-		if (silent) {
-		    tty.c_lflag &= ~(ECHO|ECHOK|ECHONL);
 
-		}
+#if defined(CONFIG_ASH_READ_NCHARS)
+		if (silent)
+		    tty.c_lflag &= ~(ECHO|ECHOK|ECHONL);
+#endif
 		tcsetattr(0, TCSANOW, &tty);
 	}
 #endif
+	i = 1;
+	STARTSTACKSTR(p);
 #if defined(CONFIG_ASH_READ_TIMEOUT)
 	if (ts.tv_sec || ts.tv_usec) {
 		FD_ZERO (&set);
 		FD_SET (0, &set);
 
 		i = select (FD_SETSIZE, &set, NULL, NULL, &ts);
-		if (!i) {
+		if (i == 1)
+		{
+			read(0, &c, 1);
+			if(c == '\n' || c == 4) /* Handle newlines and EOF */
+				i = 0; /* Don't read further... */
+			else
+				STPUTC(c, p); /* Ok, keep reading... */
+		}
 #if defined(CONFIG_ASH_READ_NCHARS)
-			if (nch_flag)
-				tcsetattr(0, TCSANOW, &old_tty);
+		if (!silent && !nch_flag)
 #endif
-			return 1;
+			tcsetattr(0, TCSANOW, &old_tty);
+
+#if defined(CONFIG_ASH_READ_NCHARS)
+		if(i == 0)
+		{
+			nchars = 0;
+			nch_flag = 1;
+		} else
+		{
+			if (nch_flag)
+				nchars--;
 		}
+#endif
 	}
 #endif
 	status = 0;
 	startword = 1;
 	backslash = 0;
-	STARTSTACKSTR(p);
 #if defined(CONFIG_ASH_READ_NCHARS)
 	while (!nch_flag || nchars--)
 #else
-	for (;;)
+	for (;i > 0;)
 #endif
 	{
 		if (read(0, &c, 1) != 1) {
@@ -12766,8 +12797,10 @@
 		}
 	}
 #if defined(CONFIG_ASH_READ_NCHARS)
-	if (nch_flag || silent)
+	if (silent || nch_flag)
 		tcsetattr(0, TCSANOW, &old_tty);
+	if (!silent && nch_flag)
+		printf("\n");
 #endif
 
 	STACKSTRNUL(p);
