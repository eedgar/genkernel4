diff -Naurp busybox-1.1.3.orig/include/applets.h busybox-1.1.3/include/applets.h
--- busybox-1.1.3.orig/include/applets.h	2006-06-10 14:55:15.000000000 -0400
+++ busybox-1.1.3/include/applets.h	2006-06-12 00:14:00.000000000 -0400
@@ -123,6 +123,7 @@ USE_FSCK_MINIX(APPLET_ODDNAME(fsck.minix
 USE_FTPGET(APPLET(ftpget, ftpgetput_main, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
 USE_FTPPUT(APPLET(ftpput, ftpgetput_main, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
 USE_FUSER(APPLET(fuser, fuser_main, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
+USE_GETDVHOFF(APPLET(getdvhoff, getdvhoff_main, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_GETOPT(APPLET(getopt, getopt_main, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_GETTY(APPLET(getty, getty_main, _BB_DIR_SBIN, _BB_SUID_NEVER))
 USE_GREP(APPLET(grep, grep_main, _BB_DIR_BIN, _BB_SUID_NEVER))
diff -Naurp busybox-1.1.3.orig/include/usage.h busybox-1.1.3/include/usage.h
--- busybox-1.1.3.orig/include/usage.h	2006-03-22 16:16:24.000000000 -0500
+++ busybox-1.1.3/include/usage.h	2006-06-12 00:11:36.000000000 -0400
@@ -889,6 +889,13 @@
 	"\t-6         When using port/proto only search IPv6 space\n" \
 	"\t-SIGNAL    When used with -k, this signal will be used to kill"
 
+#define getdvhoff_trivial_usage \
+	"<device> <partition #>"
+#define getdvhoff_example_usage \
+	"# getdvhoff /dev/sr0 0" \
+	"\t^-- Will return the offset, in bytes, of the start of the ext2\n" \
+	"\t    partition on the LiveCD"
+
 #define getopt_trivial_usage \
 	"[OPTIONS]..."
 #define getopt_full_usage \
diff -Naurp busybox-1.1.3.orig/miscutils/Config.in busybox-1.1.3/miscutils/Config.in
--- busybox-1.1.3.orig/miscutils/Config.in	2006-03-22 16:16:24.000000000 -0500
+++ busybox-1.1.3/miscutils/Config.in	2006-06-10 15:04:59.000000000 -0400
@@ -302,5 +302,16 @@ config CONFIG_WATCHDOG
 	  certain amount of time, the watchdog device assumes the system has
 	  hung, and will cause the hardware to reboot.
 
+config CONFIG_GETDVHOFF
+	bool "getdvhoff"
+	default n
+	help
+	  The getdvhoff utility is a small program with a very specific
+	  purpose -- for locating the offset of the start of the ext3
+	  partition on a Gentoo/MIPS SGI LiveCD.  This utility is needed due to
+	  the format the CDs have to be in for the ARCS Prom on SGI MIPS systems
+	  to read them.  This format is very similar to a partitioned disk image,
+	  which on a CD, the Linux kernel is currently incapable of reading.
+
 endmenu
 
diff -Naurp busybox-1.1.3.orig/miscutils/Makefile.in busybox-1.1.3/miscutils/Makefile.in
--- busybox-1.1.3.orig/miscutils/Makefile.in	2006-03-22 16:16:24.000000000 -0500
+++ busybox-1.1.3/miscutils/Makefile.in	2006-06-10 15:00:36.000000000 -0400
@@ -30,6 +30,7 @@ MISCUTILS-$(CONFIG_SETSID)      += setsi
 MISCUTILS-$(CONFIG_STRINGS)     += strings.o
 MISCUTILS-$(CONFIG_TIME)        += time.o
 MISCUTILS-$(CONFIG_WATCHDOG)    += watchdog.o
+MISCUTILS-$(CONFIG_GETDVHOFF)   += getdvhoff.o
 
 ifneq ($(strip $(MISCUTILS-y)),)
 libraries-y+=$(MISCUTILS_DIR)$(MISCUTILS_AR)
diff -Naurp busybox-1.1.3.orig/miscutils/getdvhoff.c busybox-1.1.3/miscutils/getdvhoff.c
--- busybox-1.1.3.orig/miscutils/getdvhoff.c	1969-12-31 19:00:00.000000000 -0500
+++ busybox-1.1.3/miscutils/getdvhoff.c	2006-06-12 00:15:27.000000000 -0400
@@ -0,0 +1,22 @@
+/*
+  usage:
+  getdvhoff <device> <part-num>
+*/
+
+#include <stdio.h>
+#include "busybox.h"
+
+int getdvhoff_main(int argc, char *argv[])
+{
+	FILE *f = fopen(argv[1], "r");
+	unsigned char c[4];
+	unsigned int x;
+	if (argc < 3)
+		return 1;
+	fseek(f, 316 + 12 * atoi(argv[2]), SEEK_SET);
+	fread(c, 4, 1, f);
+	x = ((unsigned)c[3]) | ((unsigned)c[2] << 8) | ((unsigned)c[1] << 16) | ((unsigned)c[0] << 24);
+	fclose(f);
+	printf("%d", x * 512);
+	return 0;
+}
