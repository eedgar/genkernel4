--- busybox-1.1.3/networking/wget.c	2006-03-22 21:16:19.000000000 +0000
+++ busybox-1.1.3.plasmaroo/networking/wget.c	2006-11-11 23:32:05.000000000 +0000
@@ -44,6 +44,7 @@
 /* Globals (can be accessed from signal handlers */
 static off_t filesize = 0;		/* content-length of the file */
 static int chunked = 0;			/* chunked transfer encoding */
+static int started = 0;
 #ifdef CONFIG_FEATURE_WGET_STATUSBAR
 static void progressmeter(int flag);
 static char *curfile;			/* Name of current file being transferred. */
@@ -51,8 +52,17 @@
 static volatile unsigned long statbytes = 0; /* Number of bytes transferred so far. */
 /* For progressmeter() -- number of seconds before xfer considered "stalled" */
 static const int STALLTIME = 5;
+int print_progress_flag = FALSE; /* Print progress as a %age for parsing */
 #endif
 
+static void timeout_reached(int flag)
+{
+	if(started == 1)
+		return;
+	printf("Timeout.\n");
+	exit(1);
+}
+
 static void close_and_delete_outfile(FILE* output, char *fname_out, int do_continue)
 {
 	if (output != stdout && do_continue==0) {
@@ -146,6 +156,8 @@
 #define WGET_OPT_HEADER	16
 #define WGET_OPT_PREFIX	32
 #define WGET_OPT_PROXY	64
+#define WGET_OPT_PRINT_PROGRESS 128
+#define WGET_OPT_TIMEOUT	256
 
 static const struct option wget_long_options[] = {
 	{ "continue",        0, NULL, 'c' },
@@ -155,6 +167,8 @@
 	{ "header",	         1, NULL, 131 },
 	{ "directory-prefix",1, NULL, 'P' },
 	{ "proxy",           1, NULL, 'Y' },
+	{ "print-progress",  0, NULL, 'g' },
+	{ "timeout",         1, NULL, 'T' },
 	{ 0,                 0, 0, 0 }
 };
 
@@ -184,21 +198,35 @@
 	int quiet_flag = FALSE;		/* Be verry, verry quiet...	    */
 	int use_proxy = 1;		/* Use proxies if env vars are set  */
 	char *proxy_flag = "on";	/* Use proxies if env vars are set  */
+	char *timeout = NULL;
 
 	/*
 	 * Crack command line.
 	 */
 	bb_opt_complementally = "-1:\203::";
 	bb_applet_long_options = wget_long_options;
-	opt = bb_getopt_ulflags(argc, argv, "cq\213O:\203:P:Y:",
+	opt = bb_getopt_ulflags(argc, argv, "cq\213O:\203:P:Y:gT:",
 					&fname_out, &headers_llist,
-					&dir_prefix, &proxy_flag);
+					&dir_prefix, &proxy_flag, &timeout);
 	if (opt & WGET_OPT_CONTINUE) {
 		++do_continue;
 	}
 	if (opt & WGET_OPT_QUIET) {
 		quiet_flag = TRUE;
 	}
+#ifdef CONFIG_FEATURE_WGET_STATUSBAR
+	if (opt & WGET_OPT_PRINT_PROGRESS) {
+		print_progress_flag = TRUE;
+	}
+#endif
+	if (opt & WGET_OPT_TIMEOUT) {
+		int timeout_sec;
+		if(sscanf(timeout, "%d", &timeout_sec) == 1)
+		{
+			signal(SIGALRM, timeout_reached);
+			alarm(timeout_sec);
+		}
+	}
 	if (strcmp(proxy_flag, "off") == 0) {
 		/* Use the proxy if necessary. */
 		use_proxy = 0;
@@ -492,7 +520,7 @@
 			close_delete_and_die("RETR: %s", buf+4);
 
 	}
-
+	started = 1;
 
 	/*
 	 * Retrieve file
@@ -746,6 +774,7 @@
 	} else
 		ratio = 100;
 
+	if(print_progress_flag == FALSE) {
 	snprintf(buf, sizeof(buf), "\r%-20.20s %3d%% ", curfile, ratio);
 
 	barlength = getttywidth() - 51;
@@ -799,6 +828,11 @@
 		snprintf(buf + strlen(buf), sizeof(buf) - strlen(buf),
 			 "%02d:%02d ETA", i / 60, i % 60);
 	}
+
+	/* print_progress_flag */
+	} else {
+		snprintf(buf, sizeof(buf), "%3d%%\n", ratio);
+	}
 	write(STDERR_FILENO, buf, strlen(buf));
 
 	if (flag == -1) {
